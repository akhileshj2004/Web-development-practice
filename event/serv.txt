const express = require('express');
const mysql = require('mysql');
const bodyParser = require('body-parser');
const cors = require('cors');

const app = express();
app.use(bodyParser.json());
app.use(cors());

// MySQL connection
const db = mysql.createConnection({
  host: 'localhost',
  user: 'root',
  password: '',
});

db.connect(err => {
  if (err) {
    console.error('Database connection failed:', err.stack);
    return;
  }
  console.log('Connected to MySQL server.');
});

const databaseName = 'EventRegistration';
db.query(`CREATE DATABASE IF NOT EXISTS ${databaseName}`, err => {
  if (err) {
    console.error('Error creating database:', err);
    return;
  }
  console.log(`Database "${databaseName}" ensured.`);
  db.changeUser({ database: databaseName }, err => {
    if (err) throw err;
    console.log(`Using database "${databaseName}".`);

    const createTableQuery = `
      CREATE TABLE IF NOT EXISTS event_registrations (
        id INT AUTO_INCREMENT PRIMARY KEY,
        name VARCHAR(255),
        email VARCHAR(255),
        phone VARCHAR(15),
        event_name VARCHAR(255),
        registration_date DATE
      )`;
    db.query(createTableQuery, err => {
      if (err) throw err;
      console.log('Event registrations table ensured.');
    });
  });
});

// API routes
app.get('/registrations', (req, res) => {
  db.query('SELECT * FROM event_registrations', (err, results) => {
    if (err) res.status(500).send(err);
    else res.json(results);
  });
});

app.post('/registrations', (req, res) => {
  const { name, email, phone, eventName, registrationDate } = req.body;
  db.query(
    'INSERT INTO event_registrations (name, email, phone, event_name, registration_date) VALUES (?, ?, ?, ?, ?)',
    [name, email, phone, eventName, registrationDate],
    (err, result) => {
      if (err) res.status(500).send(err);
      else res.json({ id: result.insertId, name, email, phone, eventName, registrationDate });
    }
  );
});

app.put('/registrations/:id', (req, res) => {
  const { id } = req.params;
  const { name, email, phone, eventName, registrationDate } = req.body;
  db.query(
    'UPDATE event_registrations SET name = ?, email = ?, phone = ?, event_name = ?, registration_date = ? WHERE id = ?',
    [name, email, phone, eventName, registrationDate, id],
    err => {
      if (err) res.status(500).send(err);
      else res.json({ id, name, email, phone, eventName, registrationDate });
    }
  );
});

app.delete('/registrations/:id', (req, res) => {
  const { id } = req.params;
  db.query('DELETE FROM event_registrations WHERE id = ?', [id], err => {
    if (err) res.status(500).send(err);
    else res.json({ id });
  });
});

app.listen(3002, () => {
  console.log('Server running on port 3002');
});
